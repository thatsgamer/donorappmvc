
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace DonorAppVersion2.Models
{

using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
public partial class Donor
{

    public Donor()
    {

        this.DonorAilmentDetails = new HashSet<DonorAilmentDetail>();

        this.DonorCycles = new HashSet<DonorCycle>();

        this.DonorFamilyTreeDiseaseDetails = new HashSet<DonorFamilyTreeDiseaseDetail>();

        this.DonorHealthQuestionsAnswereds = new HashSet<DonorHealthQuestionsAnswered>();

        this.DonorsRegisteredWithPartners = new HashSet<DonorsRegisteredWithPartner>();

        this.MatchDetails = new HashSet<MatchDetail>();

        this.MatchRequestedByDonors = new HashSet<MatchRequestedByDonor>();

        this.PaymentSummuryDonors = new HashSet<PaymentSummuryDonor>();

    }


    public int DonorId { get; set; }

    public string Salutation { get; set; }

    [Display(Name = "First Name")]
    public string FirstName { get; set; }

    [Display(Name = "Last Name")]
    public string LastName { get; set; }

    [Display(Name = "Contact Number")]
    [DataType(DataType.PhoneNumber, ErrorMessage = "Invalid Contact Number (123) 456 7890")]
    public string ContactNumber { get; set; }

    [Display(Name = "Contact Verification OTP")]
    public string ContactVerificationCode { get; set; }

    public bool isContactVerified { get; set; }



    [DataType(DataType.EmailAddress, ErrorMessage = "Invalid Email Address")]
    public string Email { get; set; }

    [Display(Name = "Email Verification OTP")]
    public string EmailVerificationCode { get; set; }

    public bool isEmailVerified { get; set; }

    
    [Display(Name = "Date of Birth")]
    [DataType(DataType.Date, ErrorMessage="Invalid Date")]
    public string DateOfBirth { get; set; }

    [Display(Name = "Eye Color")]
    public string EyeColor { get; set; }

    [Range(50, 500, ErrorMessage="Invalid Height")]
    public int Height { get; set; }

    public string Race { get; set; }

    public string Photo { get; set; }

    public System.DateTime CreationDate { get; set; }

    [DataType(DataType.Password)]
    [StringLength(16, MinimumLength = 6, ErrorMessage = "Must be at least 6 Characters long with Symbols & Numbers")]
    public string Password { get; set; }


    [Display(Name = "Confirm Password")]
    [DataType(DataType.Password)]
    [Compare("Password", ErrorMessage = "Password did not match")]
    public string ConfirmPassword { get; set; }

    public string Salt { get; set; }



    public virtual ICollection<DonorAilmentDetail> DonorAilmentDetails { get; set; }

    public virtual ICollection<DonorCycle> DonorCycles { get; set; }

    public virtual ICollection<DonorFamilyTreeDiseaseDetail> DonorFamilyTreeDiseaseDetails { get; set; }

    public virtual ICollection<DonorHealthQuestionsAnswered> DonorHealthQuestionsAnswereds { get; set; }

    public virtual ICollection<DonorsRegisteredWithPartner> DonorsRegisteredWithPartners { get; set; }

    public virtual ICollection<MatchDetail> MatchDetails { get; set; }

    public virtual ICollection<MatchRequestedByDonor> MatchRequestedByDonors { get; set; }

    public virtual ICollection<PaymentSummuryDonor> PaymentSummuryDonors { get; set; }

}

}
