
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace DonorAppVersion2.Models
{

    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    
public partial class Parent
{

    public Parent()
    {

        this.DonorCycles = new HashSet<DonorCycle>();

        this.FamilyOfIntendedParents = new HashSet<FamilyOfIntendedParent>();

        this.FamilyOfIntendedParents1 = new HashSet<FamilyOfIntendedParent>();

        this.MatchDetails = new HashSet<MatchDetail>();

        this.MatchRequestedByParents = new HashSet<MatchRequestedByParent>();

        this.ParentAilmentDetails = new HashSet<ParentAilmentDetail>();

        this.ParentFamilyTreeDiseaseDetails = new HashSet<ParentFamilyTreeDiseaseDetail>();

        this.ParentsHealthQuestionsAnswereds = new HashSet<ParentsHealthQuestionsAnswered>();

        this.ParentsRegisteredWithPartners = new HashSet<ParentsRegisteredWithPartner>();

        this.PaymentSummuryParents = new HashSet<PaymentSummuryParent>();

    }


    public int ParentId { get; set; }

    public string Salutation { get; set; }


    [DisplayName("First Name")]
    public string FirstName { get; set; }

    [DisplayName("Last Name")]
    public string LastName { get; set; }

    [DisplayName("Contact Number")]
    [DataType(DataType.PhoneNumber, ErrorMessage = "Invalid Contact Number (123) 456 7890")]
    public string ContactNumber { get; set; }

    [DisplayName("Contact Verification OTP")]
    public string ContactVerificationCode { get; set; }

    public bool isContactVerified { get; set; }

    [DataType(DataType.EmailAddress, ErrorMessage = "Invalid Email Address")]
    public string Email { get; set; }

    [DisplayName("Email Verification OTP")]
    public string EmailVerificationCode { get; set; }

    public bool isEmailVerified { get; set; }

    [Display(Name = "Date of Birth")]
    [DataType(DataType.Date)]
    public string DateOfBirth { get; set; }

    public string Address { get; set; }

    public string City { get; set; }

    public string State { get; set; }

    public string Zip { get; set; }


    public System.DateTime CreatinDate { get; set; }


    [DataType(DataType.Password)]
    [StringLength(16, MinimumLength = 6, ErrorMessage = "Must be at least 6 Characters long with Symbols & Numbers")]
    public string Password { get; set; }


    [DataType(DataType.Password)]
    [Compare("Password", ErrorMessage = "Password did not match")]
    public string ConfirmPassword { get; set; }


    public string Salt { get; set; }

    public bool isPaid { get; set; }

    public bool Status { get; set; }

    public string Note { get; set; }



    public virtual ICollection<DonorCycle> DonorCycles { get; set; }

    public virtual ICollection<FamilyOfIntendedParent> FamilyOfIntendedParents { get; set; }

    public virtual ICollection<FamilyOfIntendedParent> FamilyOfIntendedParents1 { get; set; }

    public virtual ICollection<MatchDetail> MatchDetails { get; set; }

    public virtual ICollection<MatchRequestedByParent> MatchRequestedByParents { get; set; }

    public virtual ICollection<ParentAilmentDetail> ParentAilmentDetails { get; set; }

    public virtual ICollection<ParentFamilyTreeDiseaseDetail> ParentFamilyTreeDiseaseDetails { get; set; }

    public virtual ICollection<ParentsHealthQuestionsAnswered> ParentsHealthQuestionsAnswereds { get; set; }

    public virtual ICollection<ParentsRegisteredWithPartner> ParentsRegisteredWithPartners { get; set; }

    public virtual ICollection<PaymentSummuryParent> PaymentSummuryParents { get; set; }

}

}
