//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DonorAppVersion2.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    
    public partial class Parent
    {
        public Parent()
        {
            this.DonorCycles = new HashSet<DonorCycle>();
            this.FamilyOfIntendedParents = new HashSet<FamilyOfIntendedParent>();
            this.FamilyOfIntendedParents1 = new HashSet<FamilyOfIntendedParent>();
            this.MatchDetails = new HashSet<MatchDetail>();
            this.MatchRequestedByParents = new HashSet<MatchRequestedByParent>();
            this.ParentAilmentDetails = new HashSet<ParentAilmentDetail>();
            this.ParentFamilyTreeDiseaseDetails = new HashSet<ParentFamilyTreeDiseaseDetail>();
            this.ParentsHealthQuestionsAnswereds = new HashSet<ParentsHealthQuestionsAnswered>();
            this.ParentsRegisteredWithPartners = new HashSet<ParentsRegisteredWithPartner>();
            this.PaymentSummuryParents = new HashSet<PaymentSummuryParent>();
        }
    
        public int ParentId { get; set; }

        public string Salutation { get; set; }

        //[Required(ErrorMessage = "Please Enter First Namer")]
        [Display(Name = "First Name")]
        public string FirstName { get; set; }

        //[Required(ErrorMessage = "Please Enter Last Namer")]
        [Display(Name = "Last Name")]
        public string LastName { get; set; }

        //[Required(ErrorMessage = "Please Enter Contact Number")]
        [Display(Name = "Contact Number")]
        [DataType(DataType.PhoneNumber, ErrorMessage = "Invalid Contact Number")]
        public string ContactNumber { get; set; }

        [Display(Name = "OTP from mobile")]
        public string ContactVerificationCode { get; set; }

        public bool isContactVerified { get; set; }

        [DataType(DataType.EmailAddress, ErrorMessage = "Invalid Email Number")]
        public string Email { get; set; }

        [Display(Name = "OTP from Email")]
        public string EmailVerificationCode { get; set; }

        public bool isEmailVerified { get; set; }

        [Display(Name = "Date of Birth")]
        [DataType(DataType.Date, ErrorMessage = "Invalid Date!")]
        public string DateOfBirth { get; set; }

        //[Required(ErrorMessage = "Please Enter Address")]
        public string Address { get; set; }

        //[Required(ErrorMessage = "Please Enter City")]
        public string City { get; set; }

        //[Required(ErrorMessage = "Please Enter State")]
        public string State { get; set; }

        //[Required(ErrorMessage = "Please Enter Zip/Pincode")]
        [DataType(DataType.PostalCode, ErrorMessage = "Invalid Zip Code")]
        public string Zip { get; set; }
        public System.DateTime CreatinDate { get; set; }

        //[Required(ErrorMessage = "Please Enter Password")]
        [DataType(DataType.Password)]
        [StringLength(20, ErrorMessage = "The {0} must be - {2} characters long & should contain Capital letter, Numbers & Symbol", MinimumLength = 8)]
        [Display(Name = "Password")]
        public string Password { get; set; }

        //[Required(ErrorMessage = "Please Enter Confirm Password")]
        //[Compare("Password", ErrorMessage = "Password & Confirm Password does not match!")]
        [DataType(DataType.Password)]
        [Display(Name = "Confirm Password")]
        public string ConfirmPassword { get; set; }

        public string Salt { get; set; }
        
        public bool isPaid { get; set; }
        
        public bool Status { get; set; }
        
        public string Note { get; set; }
    
        public virtual ICollection<DonorCycle> DonorCycles { get; set; }
        public virtual ICollection<FamilyOfIntendedParent> FamilyOfIntendedParents { get; set; }
        public virtual ICollection<FamilyOfIntendedParent> FamilyOfIntendedParents1 { get; set; }
        public virtual ICollection<MatchDetail> MatchDetails { get; set; }
        public virtual ICollection<MatchRequestedByParent> MatchRequestedByParents { get; set; }
        public virtual ICollection<ParentAilmentDetail> ParentAilmentDetails { get; set; }
        public virtual ICollection<ParentFamilyTreeDiseaseDetail> ParentFamilyTreeDiseaseDetails { get; set; }
        public virtual ICollection<ParentsHealthQuestionsAnswered> ParentsHealthQuestionsAnswereds { get; set; }
        public virtual ICollection<ParentsRegisteredWithPartner> ParentsRegisteredWithPartners { get; set; }
        public virtual ICollection<PaymentSummuryParent> PaymentSummuryParents { get; set; }
    }
}
