@model DonorAppVersion2.Models.Donor

@{
    ViewBag.Title = "Donor Registration : Donor 21";
}

<h2>Registration</h2>


@using (Html.BeginForm("Registration", "Donor", FormMethod.Post, new { enctype="multipart/form-data"})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Fill up the form to register as a Donor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label class="label label-warning">@ViewBag.WarningMessage</label>
                <label class="label label-danger">@ViewBag.ErrorMessage</label>
                <label class="label label-danger">@ViewBag.SuccessMessage</label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salutation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @{
    var selectList = new SelectList(
        new List<SelectListItem>
                        {
                            new SelectListItem {Text = "Mr.", Value = "Mr."},
                            new SelectListItem {Text = "Ms.", Value = "Ms."},
                            new SelectListItem {Text = "Mrs.", Value = "Mrs."}
                        }, "Value", "Text");
            }

            @Html.DropDownListFor(model => model.Salutation, selectList, "Select", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DonorType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
    var typeselectList = new SelectList(
        new List<SelectListItem>
                        {
                            new SelectListItem {Text = "Egg Donor", Value = "Egg Donor"},
                            new SelectListItem {Text = "Sperm Donor", Value = "Sperm Donor"},
                            new SelectListItem {Text = "Embryo Donor", Value = "Embryo Donor"},
                            new SelectListItem {Text = "Genetic Parent Donor", Value = "Genetic Parent Donor"}
                        }, "Value", "Text");
                }
                @Html.DropDownListFor(model => model.DonorType, typeselectList, "Select", new { @class = "form-control" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
    var genderselectList = new SelectList(
        new List<SelectListItem>
                        {
                            new SelectListItem {Text = "Male", Value = "Male"},
                            new SelectListItem {Text = "Female", Value = "Female"}
                        }, "Value", "Text");
                }
                @Html.DropDownListFor(model => model.Gender, genderselectList, "Select", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "e.g. 123 456 7890", @required = "required" } })
                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @placeholder = "MM/dd/yyyy", @required = "required" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EyeColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EyeColor, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.EyeColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Race, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Race, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Race, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2", @required = "required" })
            <div class="col-md-10">
                <input type="file" name="imagefile" class="form-control" />
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @required = "required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2", @required = "required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Account" class="btn btn-primary btn-block" />
            </div>
        </div>
    </div>
}


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery-3.2.1.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>